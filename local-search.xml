<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>免费部署自己的ChatGPT API</title>
    <link href="/2023/06/22/%E5%85%8D%E8%B4%B9%E9%83%A8%E7%BD%B2%E8%87%AA%E5%B7%B1%E7%9A%84ChatGPT-API/"/>
    <url>/2023/06/22/%E5%85%8D%E8%B4%B9%E9%83%A8%E7%BD%B2%E8%87%AA%E5%B7%B1%E7%9A%84ChatGPT-API/</url>
    
    <content type="html"><![CDATA[<p>知周所众，ChatGPT有两种用法：  </p><ol><li>网页版: 频率限制宽，免费，但是有 Cloudflare 检测，不稳定  </li><li>API：兼容各种服务，稳定，但免费版频率限制严，不适合像我这样的穷逼使用</li></ol><p>然而，例如 Openai Translator 这样的服务，需要使用 API ，所以我一直在等待一个能把网页版转换成 API 的项目。之前一段时间我终于等到了这个项目 <a href="https://github.com/acheong08/ChatGPT-to-API">ChatGPT to API</a>。<br>但是实践之后发现这个项目的文档不是十分完整，对于小白来说还是有一定的难度，所以我写了一个脚本来帮助大家快速部署。这个脚本可以帮你部署在 Docker 上，也可以帮你部署在宿主机上，同时我还通过一些方法绕过了 Cloudflare，所以不必担心出现 Access Denied 的情况。  </p><h2 id="特性"><a href="#特性" class="headerlink" title="特性"></a>特性</h2><p>原项目功能：  </p><ul><li>基于网页版的逆向工程实现了一个本地的 Fake API  </li><li>支持调用网页版支持的所有模型（当然 GPT-4 需要你是 Plus）  </li><li>支持多用户，从而防止触发频率限制</li></ul><p>我增加的功能：  </p><ul><li>实现了账号密码自动获取 access_token，并在到期后自动刷新新的 access_token（仅限账号密码登录，谷歌和微软登录只能手动填写 access_token，同时原项目只支持单账号一键登录，本项目支持了多账户一键获取 access_token）  </li><li>实现了鉴权。原项目是基于对网页版的逆向工程，所以不需要验证 API key。但是，为了安全起见，我添加了一个验证功能，你可以设置想要的 API key 来验证请求。如果不需要，可以留空。</li></ul><h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><h3 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h3><ul><li>git  </li><li>Python3  </li><li>Docker (如果你想部署在 Docker 上)  </li><li>golang (如果你想部署在宿主机上)  </li><li>至少一个 ChatGPT 账号 (多个账号可以提高频率限制)</li></ul><h3 id="克隆项目"><a href="#克隆项目" class="headerlink" title="克隆项目"></a>克隆项目</h3><p>你需要先把本项目克隆到你的电脑上，然后进入项目目录。假设目录是 <code>~/ChatGPT-to-API</code>  </p><h3 id="修改配置"><a href="#修改配置" class="headerlink" title="修改配置"></a>修改配置</h3><p>打开 <code>run.py</code>，修改如下变量：  </p><ul><li><code>proxy</code>：你的代理地址 (只写ip或域名及端口)，如果不需要代理，改为空字符串<code>&quot;&quot;</code>  </li><li><code>proxy_type</code>：你的代理类型，<code>socks5</code> 或 <code>http</code></li><li><code>accounts</code>：这是一个包含账号信息的字典，你可以在这里添加账号，支持一个或多个账号 (不支持谷歌或微软登录)，格式如下：  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python">&#123;<br>    <span class="hljs-string">&quot;账号1&quot;</span>: <span class="hljs-string">&quot;密码1&quot;</span>,<br>    <span class="hljs-string">&quot;账号2&quot;</span>: <span class="hljs-string">&quot;密码2&quot;</span>,<br>    <span class="hljs-string">&quot;账号3&quot;</span>: <span class="hljs-string">&quot;密码3&quot;</span>,<br>    ...<br>&#125;<br></code></pre></td></tr></table></figure></li><li><code>access_tokens</code>：如果你一定要使用谷歌或微软账号登录，这可能是目前唯一的办法，获得的办法可以网上查，注意，这是<strong>不推荐</strong>的办法，因为通过这种方法access token到期之后无法自动刷新。  </li><li><code>server_host</code>：监听的地址，如果你想部署在 Docker 上，改为<code>0.0.0.0</code>。如果你想部署在宿主机上且只想让本机访问，改为<code>127.0.0.1</code>或<code>localhost</code>  </li><li><code>server_port</code>：监听的端口，如果你想部署在 Docker 上，改为<code>8080</code>  </li><li><code>custom_API_key</code>: 理论上，由于原项目是基于对网页版的逆向工程，所以不需要验证 API key。但是，为了安全起见，我添加了一个验证功能，你可以设置想要的 API key 来验证请求。如果不需要，可以留空。</li></ul><h3 id="安装-Python-依赖"><a href="#安装-Python-依赖" class="headerlink" title="安装 Python 依赖"></a>安装 Python 依赖</h3><ul><li>如果部署在 Docker 中，忽略这一步  </li><li>如果部署在宿主机上，运行 <code>pip3 install -r requirements.txt</code></li></ul><h3 id="构建"><a href="#构建" class="headerlink" title="构建"></a>构建</h3><p>用 python 运行 <code>build.py</code>，并按照提示操作。<strong>请注意</strong>，无论是否成功构建，最后都会输出<code>Build finished. Press enter to exit...</code>，所以请自行观察这句话前面的输出，如果有错误，大概率是代理设置有问题，可以尝试把<code>socks5</code>改为<code>http</code>。  </p><h3 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h3><ul><li>如果部署在 Docker 中，运行 <code>docker compose up -d</code>，若要查看是否成功，可查看<code>chatgpttoapi</code>容器的日志  </li><li>如果部署在宿主机上，Windows 用户运行 <code>python run.py</code>，Linux 用户运行 <code>python3 run.py</code>，查看输出即可判断是否成功</li></ul><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><p>这个项目实现了 &#x2F;v1&#x2F;chat&#x2F;completions 接口，其余接口未实现，所以语音识别等功能无法使用<br>调用方法和官方 API 一致，所以请查阅 OpenAI API 的文档  </p><h2 id="FAQ"><a href="#FAQ" class="headerlink" title="FAQ"></a>FAQ</h2><h3 id="如何更新"><a href="#如何更新" class="headerlink" title="如何更新"></a>如何更新</h3><p>更新脚本：<code>git pull</code><br>更新 ChatGPT to API：重新运行<code>build.py</code>构建 (会自动拉取 ChatGPT to API)，然后运行  </p><h2 id="Enjoy"><a href="#Enjoy" class="headerlink" title="Enjoy~"></a>Enjoy~</h2>]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ChatGPT</tag>
      
      <tag>API</tag>
      
      <tag>部署</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>高中生都能看懂的弹簧振子简谐运动通解推导</title>
    <link href="/2023/05/09/%E9%AB%98%E4%B8%AD%E7%94%9F%E9%83%BD%E8%83%BD%E7%9C%8B%E6%87%82%E7%9A%84%E5%BC%B9%E7%B0%A7%E6%8C%AF%E5%AD%90%E7%AE%80%E8%B0%90%E8%BF%90%E5%8A%A8%E9%80%9A%E8%A7%A3%E6%8E%A8%E5%AF%BC/"/>
    <url>/2023/05/09/%E9%AB%98%E4%B8%AD%E7%94%9F%E9%83%BD%E8%83%BD%E7%9C%8B%E6%87%82%E7%9A%84%E5%BC%B9%E7%B0%A7%E6%8C%AF%E5%AD%90%E7%AE%80%E8%B0%90%E8%BF%90%E5%8A%A8%E9%80%9A%E8%A7%A3%E6%8E%A8%E5%AF%BC/</url>
    
    <content type="html"><![CDATA[<p>众所周知，简谐运动的运动通解为$x&#x3D;A\sin(\omega t+\phi)$，但是在高中甚至大学的教材都不一定给出推导过程。那么接下来我将会用高中生都能理解的步骤来推导。  </p><h2 id="预备知识"><a href="#预备知识" class="headerlink" title="预备知识"></a>预备知识</h2><ul><li>导数（包括复合函数的求导）  </li><li>牛顿第二定律</li></ul><h2 id="推导过程"><a href="#推导过程" class="headerlink" title="推导过程"></a>推导过程</h2><h3 id="法一（并不推荐）"><a href="#法一（并不推荐）" class="headerlink" title="法一（并不推荐）"></a>法一（并不推荐）</h3><p>一般来说，我们最先想到的可能使基于 $F &#x3D; -kx$，并使用牛顿第二定律来推导。这确实是一条可实现的路径，但是可能高中生难以用所学的知识来推导出来。但是我仍然会给出这种方法的推导过程。<br>$$F&#x3D;-kx&#x3D;ma&#x3D;m\frac{dv}{dt}$$<br>即<br>$$-kx&#x3D;m\frac{dv}{dt}$$<br>由于<br>$$<br>\begin{aligned}<br>&amp;v&#x3D;\frac{dx}{dt}\\<br>&#x3D;&gt;&amp;dt&#x3D;\frac{dx}{v}<br>\end{aligned}<br>$$<br>可得<br>$$<br>\begin{aligned}<br>&amp;-kx&#x3D;m\frac{dv}{dt}&#x3D;\frac{mvdv}{dx}\\<br>&#x3D;&gt;&amp;-kxdx&#x3D;mvdv<br>\end{aligned}<br>$$<br>两边同时求定积分可得：<br>$$-k\frac{x^2-x_0^2}{2}&#x3D;m\frac{v^2-v_0^2}{2}$$<br>即<br>$$\frac{1}{2}kx^2+\frac{1}{2}mv^2&#x3D;\frac{1}{2}kx_0^2+\frac{1}{2}mv_0^2$$<br>注意看这个式子，左边等于当前状态的总能量，右边等于初始状态的总能量，所以上面的步骤实际上推出了弹簧振子的能量守恒，而这是显而易见的。接下来的推导过程请看下一节。  </p><h3 id="法二（推荐）"><a href="#法二（推荐）" class="headerlink" title="法二（推荐）"></a>法二（推荐）</h3><p>直接使用能量守恒可得：<br>$$\frac{1}{2}kx^2+\frac{1}{2}mv^2&#x3D;E_0$$<br>看到这一个式子，我们不难想到三角换元，所以我们令：<br>$$<br>\begin{align}<br>x&#x3D;\sqrt{\frac{2E_0}{k}}\sin\theta\tag{1} \\<br>v&#x3D;\sqrt{\frac{2E_0}{m}}\cos\theta\tag{2}<br>\end{align}<br>$$<br>式(1)对t求导可得：<br>$$v&#x3D;\sqrt{\frac{2E_0}{k}}\cos\theta\frac{d\theta}{dt}$$<br>代入式(2)可得：<br>$$<br>\begin{align}<br>&amp;\frac{d\theta}{dt}&#x3D;\sqrt{\frac{k}{m}}\\<br>&#x3D;&gt;&amp;\theta&#x3D;\sqrt{\frac{k}{m}}t+t_0<br>\end{align}<br>$$<br>令<br>$$<br>\omega&#x3D;\sqrt{\frac{k}{m}}\\<br>\phi&#x3D;\sqrt{\frac{k}{m}}t_0<br>$$<br>即<br>$$\theta&#x3D;\omega t+\phi$$<br>代入式(1)可得：<br>$$x&#x3D;\sqrt{\frac{2E_0}{k}}\sin(\omega t+\phi)$$<br>即<br>$$x&#x3D;A\sin(\omega t+\phi)\text{, }\omega&#x3D;\sqrt\frac km$$<br>Q.E.D.</p>]]></content>
    
    
    <categories>
      
      <category>笔记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>物理</tag>
      
      <tag>简谐运动</tag>
      
      <tag>推导</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>汉明码</title>
    <link href="/2023/05/05/%E6%B1%89%E6%98%8E%E7%A0%81/"/>
    <url>/2023/05/05/%E6%B1%89%E6%98%8E%E7%A0%81/</url>
    
    <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><blockquote><p>汉明码的背景可以追溯到20世纪50年代，当时数字通信和数据存储技术正在迅速发展。在这个时期，数据传输和存储中的错误是一个普遍存在的问题。由于噪声、干扰、损坏等原因，数据在传输和存储过程中可能会发生错误，这会导致数据的丢失或损坏。<br>为了解决这个问题，人们开始研究纠错码。纠错码是一种编码方案，可以在数据传输和存储过程中检测和纠正错误。汉明码是最早的纠错码之一，它由美国数学家理查德·汉明（Richard Hamming）在20世纪50年代发明。<br>汉明码的主要优点是可以检测并纠正单个比特的错误。这使得它在数字通信和数据存储中得到广泛应用。例如，在计算机内存中，汉明码可以检测和纠正内存中的单个比特错误。在数字通信中，汉明码可以用于检测和纠正传输过程中的单个比特错误。<br>随着技术的不断发展，汉明码也在不断演化和改进。例如，扩展汉明码可以检测和纠正多个比特的错误。在实际应用中，人们还使用其他类型的纠错码，如卷积码和重复码等。这些编码方案都旨在提高数据传输和存储的可靠性和稳定性。 —— GPT 4  </p></blockquote><h2 id="预备知识"><a href="#预备知识" class="headerlink" title="预备知识"></a>预备知识</h2><h3 id="奇偶校验"><a href="#奇偶校验" class="headerlink" title="奇偶校验"></a>奇偶校验</h3><p>这是一种最简单的判断数据是否正确的办法。最常使用的是偶校验。它使用1-bit额外的数据来保证整个数据的”1”的个数是偶数。我们可以根据收到的数据里的”1”的个数来判断数据是否是正确的。偶校验可以检测出1-bit错误，但不能纠错。  </p><h3 id="汉明距离"><a href="#汉明距离" class="headerlink" title="汉明距离"></a>汉明距离</h3><p>汉明距离是两个等长字符串之间的汉明距离是两个字符串对应位置的不同字符的个数。换句话说，它就是将一个字符串变换成另外一个字符串所需要替换的字符个数。例如：<br>$$<br>\begin{aligned}<br>10{\color{red}1}1{\color{red}1}01\\<br>10{\color{red}0}1{\color{red}0}01<br>\end{aligned}<br>$$<br>之间的汉明距离是2。  </p><h3 id="最小汉明距离"><a href="#最小汉明距离" class="headerlink" title="最小汉明距离"></a>最小汉明距离</h3><p>最小汉明距离是指一个编码中，任意两个码字之间的最小汉明距离。以 2 out of 5 code (用5-bit表示0~9 10个十进制数字，5个bit里面有两个为1) 为例，它的最小汉明距离是2。  </p><h3 id="最小汉明距离与纠错能力"><a href="#最小汉明距离与纠错能力" class="headerlink" title="最小汉明距离与纠错能力"></a>最小汉明距离与纠错能力</h3><h4 id="错误检测"><a href="#错误检测" class="headerlink" title="错误检测"></a>错误检测</h4><p>仍然以 2 out of 5 code 为例，我们先列出所有可能的码字：<br>$$<br>\begin{aligned}<br>00011-&gt;1\\<br>00101-&gt;2\\<br>00110-&gt;3\\<br>01001-&gt;4\\<br>01010-&gt;5\\<br>01100-&gt;6\\<br>10001-&gt;7\\<br>10010-&gt;8\\<br>10100-&gt;9\\<br>11000-&gt;0<br>\end{aligned}<br>$$<br>假如原文为 $00110$，但是在传输的过程中发生了位翻转，收到的码字是 $00111$，那么我们可以知道至少有一个bit发生了错误。因为这并不是一个有效码字。一般地，如果一种编码的最小汉明距离为$d$，则它可以检测出$d-1$位错误。  </p><h4 id="错误纠正"><a href="#错误纠正" class="headerlink" title="错误纠正"></a>错误纠正</h4><p>上述的 2 out of 5 code 不能纠正错误。<br>然而足够多的冗余位可以使我们纠正有限的错误。最简单的例子：<br>要传输的信息是 $01$，在传输时我们将其重复3次 $010101$，这样即使有一位发生了位翻转，我们也可以通过另外两个copy来复原它。<br>Ujjal Bhowmik教授的课件说：  </p><blockquote><p>Given a code word $C$, we can define a neighborhood $N_k(C)$ of distance $k$ around $C$ as the set of bit patterns with Hamming distance ≤ $k$ from $C$. If up to k bits flip in a stored copy of $C$, the final bit pattern falls within $N_k(C)$.<br>Assume that up to $k$ bits flip in a stored bit pattern $C$ to produce a final bit pattern $F$. We know that F is in $N_k(C)$. When can we identify $C$, given only $F$? Only when $N_k(C)$ does not overlap with neighborhood $N_k(D)$ for any other code word $D$.<br>If we want to correct $k$ errors, we need the neighborhoods $N_k(C)$ and $N_k(D)$ to be disjoint for any pair of code words $C$ and $D$.<br>In other words, to correct $k$ errors, the distance between code words must be at least $2k + 1$. But that’s Hamming distance!  </p></blockquote><p>这一段话有点抽象，我尝试用简单一点的语言来解释。<br>先说结论，如果一种编码能够纠正 $k$ 个错误，那么它的最小汉明距离至少为 $2k + 1$。也就是说，最小汉明距离为 $k$ 的编码能够完成至多 $\lfloor\frac{k - 1}{2}\rfloor$的纠错。它的原理大概是这样的：<br>纠正位翻转的过程是无效码字才有效码字的转变，这一个过程实际上是找到了一个最接近接收到的无效码字的有效码字。我们假设一钟编码的最小汉明距离为 $2k$，但是数据在传输过程钟发成了 $k$ 位位翻转，那么它就会有两种相同汉明距离的方式变成有效码字，我们就无法确定应该使用哪一种。再比如，假设一种编码的最小汉明距离位 $2k - 1$，但是数据在传输过程中发生了 $k$ 位位翻转，那么离他最近的有效码字(离他汉明距离为 $k - 1$)并不是它的原码字，所以无法正确纠错。对于最小距离小于$2k - 1$的编码也是如此。  </p><h2 id="汉明码"><a href="#汉明码" class="headerlink" title="汉明码"></a>汉明码</h2><p>汉明码是一种通用、高效且最小汉明距离为3的编码。它提供了一种纠正1-bit错误的简单方法。<br>首先我来介绍如何计算原始数据的汉明码。<br>对于一个 $N$ 位的汉明码：  </p><ol><li>从最低位向最高位分别编号为1~N (注意是从1开始的)  </li><li>使所有第2的幂次位作为校验位，假设为第 P 位<br>接下来我会以(7,4)汉明码(4-bit有效数据，3位校验位)来举例：  </li><li>第 P 位使得所有 使得二进制权为P且该位为1，即(P AND K) &#x3D;&#x3D; P 的第 K 位 成为偶校验。（可能有点抽象，下面会举例）</li></ol><p>假设一个码字为$x_7x_6x_5x_4x_3x_2x_1$，<strong>注意没有</strong> $x_0$，那么校验位为 $x_4$, $x_2$, $x_1$。数据位为 $x_7$, $x_6$, $x_5$, $x_3$。<br>我们把校验位放在一起写成一个二进制数，$x_4x_2x_1$。这个二进制数刚好可以表示0~7。<br>$x_1$使得$x_1$, $x_3$, $x_5$, $x_7$为偶校验。因为二进制权$1&#x3D;2^0，$对应第0位，$x_1$, $x_3$, $x_5$, $x_7$二进制的第0位都是1。<br>$x_2$使得$x_2$, $x_3$, $x_6$, $x_7$为偶校验。因为二进制权$2&#x3D;2^1，$对应第1位，$x_2$, $x_3$, $x_6$, $x_7$二进制的第1位都是1。<br>$x_4$使得$x_4$, $x_5$, $x_6$, $x_7$为偶校验。因为二进制权$4&#x3D;2^2，$对应第2位，$x_4$, $x_5$, $x_6$, $x_7$二进制的第2位都是1。  </p><p>我们来看一个图<br><img src="https://source.geniucker.top/image/20230505-1/1.webp" alt="1"><br>如果数据传输没有错误，每个圈都满足偶校验。如果传输过程中有一位发生了位翻转，导致一个或多个圈不满足偶校验，比如红色和黄色圈不满足偶校验而蓝色仍然满足偶校验，那我们就可以得出是第三位发生了位翻转，我们只需要翻转第三位就能得到正确的数据。<br>虽然我们能通过图像找到错误的位并纠正，但是当位数多的时候，我们将难以画出图像，我已我们需要一种代数化的解法。我们注意到，一组数据满足偶校验，他们的异或值为0，反之为1。在上面的图中，重叠部分的数字是所在圈的数字之和。在上一段所说的例子之中，红色圈的异或值为1，黄色圈的异或值为1，蓝色圈的异或值为0。将4, 2, 1作为权重将对应圈的异或值排列成二进制数，即 $011$，也就是十进制3，也就是第三位发生了位翻转。<br>总结一下，我们刚刚事实上算了3个异或：<br>$$<br>\begin{aligned}<br>e_1 &#x3D; x_1 \oplus x_3 \oplus x_5 \oplus x_7\\<br>e_2 &#x3D; x_2 \oplus x_3 \oplus x_6 \oplus x_7\\<br>e_4 &#x3D; x_4 \oplus x_5 \oplus x_6 \oplus x_7<br>\end{aligned}<br>$$<br>那么二进制数 $e_4e_2e_1$ 就是发生位翻转的位数。如果$e_4e_2e_1$为0，说明三个圈都满足偶校验，没有发生位翻转。    </p><p>一般地，为了找到哪一位发生了位翻转，我们只需要计算出上述的每一个 $e_{2^k}$，在排列成二进制数，就能得到发生位翻转的位数。  </p><p>如果还是不能我们是如何定位到位翻转的位数的，我像用一道数学题来说明：  </p><blockquote><p>假设你1000酒，其中一瓶有剧毒，其余没有毒，不论是喝到有毒酒还是含有有毒酒的混合液体都会在喝后一个小时死亡。现在你有10只小白鼠，请问如何只使用一小时找到那瓶有毒的酒？  </p></blockquote><p>解：我们把1000瓶酒从1~1000编号并写成10位二进制，把10只小白鼠从1~10编号。每只小白鼠分别对应二进制的一位。比如小白鼠1对应二进制的第1位，小白鼠2对应二进制的第2位。<br>我们让小白鼠1喝所有二进制第1位为1的酒，小白鼠2喝所有二进制第2位为1的酒，以此类推。<br>1小时后，如果小白鼠1死了，那么有毒酒的二进制第一位一定为1，如果小白鼠2死了，那么有毒酒的二进制第二位一定为1，以此类推。于是我们能够得到有毒酒编号的二进制数。这样我们就能在一个小时的时候找到那瓶有毒的酒。  </p><h2 id="SEC-DED-Code"><a href="#SEC-DED-Code" class="headerlink" title="SEC-DED Code"></a>SEC-DED Code</h2><p>SEC-DED Code (Single Error Correction, Double Error Detection) 是带有奇偶校验的汉明码，是汉明码的一种拓展。它在汉明码的基础上增加了一位奇偶校验位，我们通常使用带有奇校验的汉明码(在汉明码的最高位之前增加奇校验位)。这样，这种编码的最小汉明距离变成了4。它最多能纠正 $\lfloor \frac{4-1}{2} \rfloor &#x3D; 1$ 位错误。但是当发生两位错误时，由于到最近的正确码字的距离为2，有不止一种可能，所以无法纠错。这就能避免原本汉明码在处理两位时候的错误纠错。<br>下面举一个具体的例子：<br>传输前的原始数据为 $1001$，它的带有奇校验的汉明码为 $01001100$。在传输的过程中发生了一位位翻转变成了 $01001000$。为了处理错误，我们先按照正常汉明码的步骤处理它的最低7-bit，得到 $e_4e_2e_1&#x3D;100$，纠正第4位错误后变成 $01001100$，这时再判断最高位，看是否满足奇校验，如果是，则成功纠正一位错误，如果不满足奇校验，说明发生了两位错误，无法纠正。  </p>]]></content>
    
    
    <categories>
      
      <category>笔记</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Subscription Converter for Clash - 一个易于部署的Clash订阅转换</title>
    <link href="/2023/05/01/Subscription-Converter-for-Clash-%E4%B8%80%E4%B8%AA%E6%98%93%E4%BA%8E%E9%83%A8%E7%BD%B2%E7%9A%84Clash%E8%AE%A2%E9%98%85%E8%BD%AC%E6%8D%A2/"/>
    <url>/2023/05/01/Subscription-Converter-for-Clash-%E4%B8%80%E4%B8%AA%E6%98%93%E4%BA%8E%E9%83%A8%E7%BD%B2%E7%9A%84Clash%E8%AE%A2%E9%98%85%E8%BD%AC%E6%8D%A2/</url>
    
    <content type="html"><![CDATA[<p>自己的项目别人都发完博客了结果自己还没发过233，还是稍微记录一下  </p><h2 id="当前功能"><a href="#当前功能" class="headerlink" title="当前功能"></a>当前功能</h2><p>现在又两个分支 (但是由于某些原因我把他们分成了两个仓库)</p><ul><li>通用版（适合所有Clash用户）: <a href="https://github.com/geniucker/sub-conv">https://github.com/geniucker/sub-conv</a>  </li><li>ZJU专版: <a href="https://github.com/geniucker/sub-conv-4-ZJU">https://github.com/geniucker/sub-conv-4-ZJU</a></li></ul><p>通用版本功能：</p><ul><li>一个可以勉强能看的订阅转换 Web-UI (感谢 <a href="https://github.com/musanico">@Musanico</a>)  </li><li>大体基于 ACL 的规则  </li><li>基于 Provider 的节点自动更新  </li><li>（为土豪）多机场用户提供了支持  </li><li>剩余流量和总流量的显示（单机场的时候才有用，需要你的机场和你用的Clash同时支持，已知Clash for Windows, Clash Verge, Stash, Clash Meta for Android等已支持）  </li><li>实现了 clash 订阅转换 proxy-provider 的 api, (一般人也不会去用吧), 不再依赖 Proxy Provider Converter , 用法&lt;网页根目录&gt;&#x2F;provider?url&#x3D;&lt;你的订阅&gt;,例如上面给出的示例,地址为<a href="https://sub-converter.geniucker.top/provider?url=">https://sub-converter.geniucker.top/provider?url=</a>&lt;你的订阅&gt;,&lt;你的订阅&gt;自行替换  </li><li>支持配置文件 (config.py，之后说不定会写subconverter配置到本项目的转换)</li></ul><p>ZJU专版在通用版的基础上增加了：</p><ul><li>对<a href="https://github.com/Mythologyli/ZJU-Connect/">ZJU Connect</a>的支持  </li><li>包括了ZJU专用规则 (来自<a href="https://github.com/Mythologyli/ZJU-Rule/">ZJU-Rule</a>)</li></ul><h2 id="项目缘起"><a href="#项目缘起" class="headerlink" title="项目缘起"></a>项目缘起</h2><p><del>高考前两个月太空</del><br>一直在担心公共订阅转换的安全性问题。已开始我看到了 <a href="https://github.com/tindy2013/subconverter">subconverter</a> ，但是当时身无分文，只能部署在 <a href="https://vercel.com/">Vercel</a> 这样的 Serverless Function 里。但是由于 subconverter 是用 C++ 写的，无法在 Vercel 上部署（曾经可以部署可执行文件，但是我死活弄不出来），所以就有了自己写订阅转换的想法。  </p><h2 id="初始想法"><a href="#初始想法" class="headerlink" title="初始想法"></a>初始想法</h2><ol><li>我需要用 Linux，我需要解决节点自动更新的问题，这个可以用Clash的proxy-provider解决  </li><li>暂时只要支持我当时所用的一元只因厂就可以了，如果做一个通用型的Clash订阅转换太复杂了(即使只是Clash到Clash的转换)，所以我硬编码了大部分内容，连地区分组都是硬编码的，这会导致问题，之后会说</li></ol><h2 id="初步实现"><a href="#初步实现" class="headerlink" title="初步实现"></a>初步实现</h2><p>Vercel 的 Serverless Function 支持 Node.js, Go, Python, Ruby，显然我只会 Python，而且刚好之前摸过一点点 <a href="https://flask.palletsprojects.com/">Flask</a> ，所以就用了 Flask。<br>初代的文件结构主要是这样的</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs shell">.<br>│  base.py                  #包含了拉取规则的函数<br>│  head.py                  #硬编码的配置文件组成部分，包括了地区分组等 <br>│  index.py                 #这个api的主程序<br>│  requirements.txt         #python模块依赖列表<br>│  ruleList.py              #规则来源列表<br>│  vercel.json              #vercel配置文件<br>│<br>├─static                    #静态网页的js，用来渲染Markdown<br>│  └─js<br>│          markdeep.min.js<br>│<br>└─templates                 #静态网页，一个简单的首页，用于引导<br>        index.html<br></code></pre></td></tr></table></figure><p>当时的流程非常简单：用户发起get请求，服务端拉取规则，生成proxy-provider的部分，再和其他硬编码的部分进行拼接，就可以返回给用户了。  </p><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>可以欣赏一下我硬编码的屎山代码：<a href="https://github.com/Geniucker/sub-conv/tree/a4b4ed09956f5c55442a4e365d7f58192d5059b6">https://github.com/Geniucker/sub-conv/tree/a4b4ed09956f5c55442a4e365d7f58192d5059b6</a>，这个代码简单到你一看就知道我在干嘛(特别是<code>head.py</code>文件)<br>最大的问题就在于我硬编码了大部分内容，这会导致很多问题：</p><ol><li>虽然开始的时候一元的节点配置很稳定，节点的地区基本不变，但是到后来他频繁的增删节点，例如美国节点时有时无。在美国节点消失的时候，由于地区组是通过provider的filter匹配出来的，如果匹配不到就会报错。而我只能通过改代码来解决这个问题。  </li><li>我有使用多个只因厂的需求，在硬编码的情况下，这极难实现  </li><li>维护困难</li></ol><h2 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h2><p>要解决这些问题，只有一个办法：重构除了拉取规则以外的几乎所有部分<a href="https://github.com/Geniucker/sub-conv/commit/e48bbc64257be11c77abcc8b06853888bcf4a98f">https://github.com/Geniucker/sub-conv/commit/e48bbc64257be11c77abcc8b06853888bcf4a98f</a> (这次提交好像还是有bug的)<br>于是我直接做了一个通用型的Clash订阅转换<br>主要的工作流程是这样的：用户发起get请求-&gt;服务端获取节点信息，生成地区分组-&gt;获取规则-&gt;生成其他部分并拼接-&gt;返回给用户<br>那么到这里之后其实功能已经实现的大差不差了，但是还是没有实现多只因厂，也发现了别的问题：调整规则组还是要修改代码，对用户不友好;用户每次请求接口都需要拉取一次规则，很长的时间花在网络上，所有就想着弄缓存。<br>于是，我事先了如下内容：</p><ul><li>多只因厂支持  </li><li>配置文件  </li><li>使用 GitHub Action 定时拉取一次规则然后缓存到仓库里<del>（这会导致一个问题，fork仓库的自动更新规则产生的提交会和我都仓库的提交产生冲突导致无法拉取上游更新，我还不知道怎么解决。<em><strong>要是你知道如何解决请务必联系我</strong></em>）</del>已解决这个问题</li></ul><p>之后还遇到了 Vercel 用量告急的问题，这是因为请求太多了。在早先的实现里，我为每个地区的组单独开了provider，每个provider都会分别发出请求以拉取节点更新。在得知meta内核支持组内filter之后，提供了meta内核的选项，这样就可以每个只因厂只用一个provider然后在分组里面再匹配出对应地区的节点。  </p><h2 id="当前支持的功能"><a href="#当前支持的功能" class="headerlink" title="当前支持的功能"></a>当前支持的功能</h2><p>综上，目前我实现了如下功能</p><ul><li>一个可以勉强能看的订阅转换 Web-UI (感谢 <a href="https://github.com/musanico">@Musanico</a>)  </li><li>大体基于 ACL 的规则（包括了ZJU专用规则）  </li><li>基于 Provider 的节点自动更新  </li><li>对ZJU Connect的支持  </li><li>多只因厂支持  </li><li>剩余流量和总流量的显示（单机场的时候才有用，需要你的机场和你用的Clash同时支持，已知Clash for Windows, Clash Verge, Stash, Clash Meta for Android等已支持）  </li><li>实现了 clash 订阅转换 proxy-provider 的 api（以前是使用别人的api）  </li><li>支持配置文件 (<code>config.py</code>)</li></ul><h2 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h2><p>请查阅 <a href="https://github.com/geniucker/sub-conv/wiki">Wiki</a><br>虽然使用英文写的，但是我懒得用中文再写一遍了  </p>]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Clash</tag>
      
      <tag>订阅转换</tag>
      
      <tag>subconverter</tag>
      
      <tag>subscription</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>再记Hexo博客部署</title>
    <link href="/2023/03/22/%E5%86%8D%E8%AE%B0Hexo%E5%8D%9A%E5%AE%A2%E9%83%A8%E7%BD%B2/"/>
    <url>/2023/03/22/%E5%86%8D%E8%AE%B0Hexo%E5%8D%9A%E5%AE%A2%E9%83%A8%E7%BD%B2/</url>
    
    <content type="html"><![CDATA[<p>我们都知道，Hexo提供了<code>hexo d</code>这样一键部署的命令，这对于把博客放在本地的用户来说确实非常方便。但是由于一些原因我想要把Hexo的原始文件托管到GitHub上，这就需要想一个部署方案，既能本地推送部署，也能直接网页在线修改后部署。所以这肯定要用到CI来实现push之后自动发布网页。这里记录一下两个方案。</p><h2 id="方案一：Vercel"><a href="#方案一：Vercel" class="headerlink" title="方案一：Vercel"></a>方案一：Vercel</h2><p>Vercel 真的是一个非常好的平台，给开发者提供了免费的网页托管和 Serverless Functions 等一些非常有用的东西。如果你要通过 Vercel 实现上述的操作，可以看 <a href="https://vercel.com/guides/deploying-hexo-with-vercel">vercel的文档</a>, 这里我就不赘述了。由于我 Vercel 的用量有点大了，所以我就使用了下面的这种办法  </p><h2 id="方案二：GitHub-Actions"><a href="#方案二：GitHub-Actions" class="headerlink" title="方案二：GitHub Actions"></a>方案二：GitHub Actions</h2><p>众所周知，GitHub为公共仓库提供了无限的CI时间，<del>所以怎么能不白嫖呢</del>&#x2F;doge<br>下面分成两个部分来介绍如何使用GitHub的CI来部署GitHub Page  </p><h3 id="hexo-g-d的时候发生了什么"><a href="#hexo-g-d的时候发生了什么" class="headerlink" title="hexo g -d的时候发生了什么"></a><code>hexo g -d</code>的时候发生了什么</h3><p>在开始写GitHub的CI之前，我们先要知道hexo原本的部署流程是怎么样的，比较典型的用法是<code>hexo g -d</code>，也就是生成并部署，期间发生了如下的事情：  </p><ol><li><code>hexo g</code>生成博客的静态文件到<code>public</code>目录  </li><li>将<code>public</code>目录的内容同步到<code>.deploy_git</code>内的git仓库  </li><li>强制推送到远程仓库  </li><li>GitHub Pages部署的CI自动运行，完成网页的部署</li></ol><h3 id="我们如何实现"><a href="#我们如何实现" class="headerlink" title="我们如何实现"></a>我们如何实现</h3><p>如上文分析，我们需要的博客的静态文件实际上在<code>public</code>文件夹里，所以我们只需要在Action里执行<code>hexo g</code>然后把<code>publish</code>文件夹的内容跑GitHub Pages的workflow（这可以看GitHub的文档）就可以了。<br>然后我们注意到hexo博客目录下有一个<code>node_modules</code>目录比较大，它是博客所需的依赖，但实际上依赖信息都已经被记录到了博客目录下的<code>yarn.lock</code>或<code>package.json</code>这样的文件中了，我已我们应该把这个文件夹添加到<code>.gitignore</code>里，我们只要在Action中执行<code>npm install</code> (npm)或<code>yarn install</code> (yarn)即可。<br>下面是最终的workflow配置文件 (它应该是仓库的<code>.github/workflows/</code>目录里的某一个<code>yaml</code>文件，比如我的是<code>.github/workflows/deploy.yaml</code>)，我用的是yarn，如果你使用npm可以把第44和49行的<code>yarn</code>换成<code>npm</code><br>最终结果是每次push之后，都会自动运行这个workflow，并把网页部署到这个仓库的GitHub Pages(不会同时生成一个新的分支)  </p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># This is a basic workflow to help you get started with Actions</span><br><br><span class="hljs-attr">name:</span> <span class="hljs-string">deploy</span><br><br><span class="hljs-comment"># Controls when the workflow will run</span><br><span class="hljs-attr">on:</span><br>  <span class="hljs-comment"># Triggers the workflow on push or pull request events but only for the &quot;main&quot; branch</span><br>  <span class="hljs-attr">push:</span><br>    <span class="hljs-attr">branches:</span> [ <span class="hljs-string">&quot;main&quot;</span> ]<br><br>  <span class="hljs-comment"># Allows you to run this workflow manually from the Actions tab</span><br>  <span class="hljs-attr">workflow_dispatch:</span><br><br><span class="hljs-comment"># Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages</span><br><span class="hljs-attr">permissions:</span><br>  <span class="hljs-attr">contents:</span> <span class="hljs-string">read</span><br>  <span class="hljs-attr">pages:</span> <span class="hljs-string">write</span><br>  <span class="hljs-attr">id-token:</span> <span class="hljs-string">write</span><br><br><span class="hljs-comment"># Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.</span><br><span class="hljs-comment"># However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.</span><br><span class="hljs-attr">concurrency:</span><br>  <span class="hljs-attr">group:</span> <span class="hljs-string">&quot;pages&quot;</span><br>  <span class="hljs-attr">cancel-in-progress:</span> <span class="hljs-literal">false</span><br><br><span class="hljs-comment"># A workflow run is made up of one or more jobs that can run sequentially or in parallel</span><br><span class="hljs-attr">jobs:</span><br>  <span class="hljs-comment"># This workflow contains a single job called &quot;build&quot;</span><br>  <span class="hljs-attr">build:</span><br>    <span class="hljs-comment"># The type of runner that the job will run on</span><br>    <span class="hljs-attr">runs-on:</span> <span class="hljs-string">ubuntu-latest</span><br><br>    <span class="hljs-comment"># Steps represent a sequence of tasks that will be executed as part of the job</span><br>    <span class="hljs-attr">steps:</span><br>      <span class="hljs-comment"># Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/checkout@v3</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Setup</span> <span class="hljs-string">Node.js</span> <span class="hljs-string">environment</span><br>        <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/setup-node@v3.6.0</span><br>        <span class="hljs-attr">with:</span><br>          <span class="hljs-comment"># Version Spec of the version to use. Examples: 12.x, 10.15.1, &gt;=10.15.0.</span><br>          <span class="hljs-attr">node-version:</span> <span class="hljs-number">18.15</span><span class="hljs-number">.0</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">generate</span><br>        <span class="hljs-attr">run:</span> <span class="hljs-string">|</span><br><span class="hljs-string">          yarn install</span><br><span class="hljs-string">          yarn hexo g</span><br><span class="hljs-string"></span>          <br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Upload</span> <span class="hljs-string">artifact</span><br>        <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/upload-pages-artifact@v1</span><br>        <span class="hljs-attr">with:</span><br>          <span class="hljs-attr">path:</span> <span class="hljs-string">public</span><br>          <br>  <span class="hljs-comment"># Deployment job</span><br>  <span class="hljs-attr">deploy:</span><br>    <span class="hljs-attr">environment:</span><br>      <span class="hljs-attr">name:</span> <span class="hljs-string">github-pages</span><br>      <span class="hljs-attr">url:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">steps.deployment.outputs.page_url</span> <span class="hljs-string">&#125;&#125;</span><br>    <span class="hljs-attr">runs-on:</span> <span class="hljs-string">ubuntu-latest</span><br>    <span class="hljs-attr">needs:</span> <span class="hljs-string">build</span><br>    <span class="hljs-attr">steps:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Deploy</span> <span class="hljs-string">to</span> <span class="hljs-string">GitHub</span> <span class="hljs-string">Pages</span><br>        <span class="hljs-attr">id:</span> <span class="hljs-string">deployment</span><br>        <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/deploy-pages@v1</span><br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>建站</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2023/03/21/hello-world/"/>
    <url>/2023/03/21/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Yep, as you see, this is a “Hello World” here. You may wonder why is this here at such a time. Well, it’s the second time I want to keep my blog. So it can be considered as a brand-new start again.  </p>]]></content>
    
    
    <categories>
      
      <category>随笔</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>开普勒三大定律的证明</title>
    <link href="/2022/01/16/%E5%BC%80%E6%99%AE%E5%8B%92%E4%B8%89%E5%A4%A7%E5%AE%9A%E5%BE%8B%E7%9A%84%E8%AF%81%E6%98%8E/"/>
    <url>/2022/01/16/%E5%BC%80%E6%99%AE%E5%8B%92%E4%B8%89%E5%A4%A7%E5%AE%9A%E5%BE%8B%E7%9A%84%E8%AF%81%E6%98%8E/</url>
    
    <content type="html"><![CDATA[<h1 id="开普勒三大定律"><a href="#开普勒三大定律" class="headerlink" title="开普勒三大定律"></a>开普勒三大定律</h1><blockquote><p><strong>开普勒第一定律（轨道定律）</strong>：所有星星绕恒星绕恒星运动的轨道都是<strong>椭圆</strong>且恒星处在椭圆的某个<strong>焦点</strong>上<br><strong>开普勒第二定律（面积定律）</strong>：对于任意一个行星来说，其与恒星的连线扫过的面积$S$与运动时间$t$成正比<br><strong>开普勒第三定律（周期定律）</strong>：所有行星轨道的<strong>半长轴</strong>$a$的三次方与其<strong>公转周期</strong>$T$的二次方的比值都相等，且比值只与其<strong>绕转天体的质量</strong>有关，或者说，行星轨道的<strong>半长轴</strong>$a$正比于<strong>公转周期</strong>$T$的二次方，即 $a^3\propto T^2$  </p></blockquote><p><em><strong>公式异常请刷新页面</strong></em></p><h1 id="预备知识"><a href="#预备知识" class="headerlink" title="预备知识"></a>预备知识</h1><ol><li>极坐标系</li><li>亿点点微积分</li><li>分部积分：$\int udv&#x3D;uv-\int vdu$<br>证明：<br>$$d(uv)&#x3D;udv+vdu$$<br>$$udv&#x3D;d(uv)-vdu$$<br>$$\int udv&#x3D;uv-\int vdu$$</li></ol><h1 id="第一定律"><a href="#第一定律" class="headerlink" title="第一定律"></a>第一定律</h1><p>要验证运动轨迹是一个椭圆（这里包括圆），只需求出其轨迹方程，再与椭圆的方程对比来判断是否符合即可。椭圆再数学上有两种常见的表达方式，一种是直角坐标系方程：<br>$$\frac{x^2}{a^2}+\frac{y^2}{b^2}&#x3D;1$$<br>另一种是极坐标方程：<br>$$\rho &#x3D;\frac{ep}{1-ecos\theta}(e\in[0,1))$$<br>显然这里用直角坐标系会很麻烦，因此以恒星为极点建立极坐标系<br><img src="https://source.geniucker.top/image/20220116-1/1.png" alt="1"><br>假设恒星的质量为$M$，位矢（位置矢量）为$\vec{r_1}$，行星质量为$m$，位矢为$\vec{r_2}$，设$\vec{r}&#x3D;\vec{r_1}-\vec{r_2}$，则<br>$$\vec{\ddot{r}}&#x3D;\vec{\ddot{r_1}}-\vec{\ddot{r_2}} \tag1$$<br>（为了方便，下文用小写字母表示对应矢量的模）<br>只需证明r与极角$\theta$满足椭圆的极坐标方程形式<br>由万有引力公式和牛顿第二定律可得$M$和$m$的加速度分别为<br>$$\vec{\ddot{r_1}}&#x3D;-\frac{Gm}{r^3}\vec{r}\qquad \vec{\ddot{r_2}}&#x3D;\frac{GM}{r^3}\vec{r}$$<br>结合$(1)$可得：<br>$$\vec{\ddot{r}}+\frac{G(M+m)}{r^3}\vec{r}&#x3D;\vec{0} \tag2$$<br>为了解这个矢量微分方程，我们考虑将它化为标量微分方程，一种可行的方法是引入一组单位正交基底再根据平面向量相等的充要条件得到两个标量等式。于是我们引入$\vec{r}$的单位方向向量和法向量$\vec{\hat{r}}$和$\vec{\hat{\theta}}$。则$\vec{r}&#x3D;r\vec{\hat{r}}$<br><img src="https://source.geniucker.top/image/20220116-1/2.png" alt="2"><br>为了研究$\vec{\hat{r}}$和$\vec{\hat{\theta}}$之间的关系，我们引入直角坐标系辅助。<br>$$\vec{\hat{r}}&#x3D;\vec{x}cos\theta +\vec{y}sin\theta $$<br>$$\vec{\hat{\theta}}&#x3D;-\vec{x}sin\theta +\vec{y}cos\theta $$<br>可得<br>$$\frac{d\vec{\hat{r}}}{d\theta}&#x3D;\vec{\hat{\theta}}$$<br>$$\frac{d\vec{\hat{\theta}}}{d\theta}&#x3D;-\vec{\hat{r}}$$<br>则速度<br>$$\vec{\dot{r}}&#x3D;\frac{d\vec{r}}{dt}&#x3D;\frac{dr\vec{\hat{r}}}{dt}&#x3D;\frac{\vec{\hat{r}}dr+rd\vec{\hat{r}}}{dt}&#x3D;\vec{\hat{r}}\frac{dr}{dt}+r\frac{d\vec{\hat{r}}}{d\theta}\frac{d\theta}{dt}&#x3D;\dot{r}\vec{\hat{r}}+r\dot{\theta}\vec{\hat{\theta}}$$<br>加速度<br>$$<br>\begin{aligned}<br>\vec{\ddot{r}} &amp;&#x3D; \frac{d\vec{\dot{r}}}{dt}\\<br>               &amp;&#x3D; \ddot{r}\vec{\hat{r}}+\dot{r}\frac{d\vec{\hat{r}}}{d\theta}\frac{d\theta}{dt}+\dot{r}\dot{\theta}\vec{\hat{\theta}}+\ddot{\theta}r\vec{\hat{\theta}}+r\dot{\theta}\frac{d\vec{\hat{\theta}}}{d\theta}\frac{d\theta}{dt}\\<br>               &amp;&#x3D; \ddot{r}\vec{\hat{r}}+\vec{\dot{r}}\dot{\theta}\vec{\hat{\theta}}+\dot{r}\dot{\theta}\vec{\hat{\theta}}+r\ddot{\theta}\vec{\hat{\theta}}-r\dot{\theta}^2\vec{\hat{r}}\\<br>               &amp;&#x3D; (\ddot{r}-r\dot{\theta}^2)\vec{\hat{r}}+(2\dot{r}\dot{\theta}+r\ddot{\theta})\vec{\hat{\theta}}<br>\end{aligned}<br>$$<br>综上<br>$$\vec{\dot{r}} &#x3D; \dot{r}\vec{\hat{r}}+r\dot{\theta}\vec{\hat{\theta}}\tag3$$<br>$$\vec{\ddot{r}} &#x3D; (\ddot{r}-r\dot{\theta}^2)\vec{\hat{r}}+(2\dot{r}\dot{\theta}+r\ddot{\theta})\vec{\hat{\theta}}\tag4$$<br>将$(4)$代入$(2)$<br>$$(\ddot{r}-r\dot{\theta}^2+G\frac{M+m}{r^2})\vec{\hat{r}}+(2\dot{r}\dot{\theta}+r\ddot{\theta})\vec{\hat{\theta}}&#x3D;\vec{0}&#x3D;0\vec{\hat{r}}+0\vec{\hat{\theta}}$$<br>由平面向量基本定理<br>$$\ddot{r}-r\dot{\theta}^2+G\frac{M+m}{r^2}&#x3D;0\tag5$$<br>$$2\dot{r}\dot{\theta}+r\ddot{\theta}&#x3D;0\tag6$$<br>对$(6)$两边积分，观察其系数，先两边乘$r$<br>$$<br>\begin{aligned}<br>&amp; \int 2r\dot{r}\dot{\theta}dt+\int r^2\ddot{\theta}dt&#x3D;C\\<br>\Leftrightarrow&amp; \int 2r\dot{\theta}dr+\int r^2d\dot{\theta}&#x3D;C<br>\end{aligned}<br>$$<br>对第二项分部积分得<br>$$\int 2r\dot{\theta}dr+\dot{\theta}r^2-\int 2r\dot{\theta}dr&#x3D;C$$<br>因此<br>$$\dot{\theta}r^2&#x3D;C\tag7$$<br>注意到要证的结论$r&#x3D;\frac{ep}{1-ecos\theta}$发现$r$的倒数比较简单<br>于是我们令$r&#x3D;\frac1x$，则$x&#x3D;\frac1r$<br>可得<br>$$\dot{r}&#x3D;\frac{dr}{dx}\frac{dx}{d\theta}\frac{d\theta}{dt}&#x3D;-\frac{1}{x^2}\dot{\theta}\frac{dx}{d\theta}&#x3D;-r^2\theta \frac{dx}{d\theta}&#x3D;-C\frac{dx}{d\theta}$$<br>再求导（懒得打过程了）<br>$$\ddot{r}&#x3D;-C^2x^2\frac{d^2x}{d\theta^2}\tag8$$<br>把$(8)$代入$(5)$可得：<br>$$-C^2x^2\frac{d^2x}{d\theta^2}-C^2x^3+G(M+m)x^2&#x3D;0$$<br>即<br>$$\frac{d^2x}{d\theta^2}+x&#x3D;G\frac{M+m}{C^2}$$<br>设$\frac{dx}{d\theta}&#x3D;x’$，$\frac{dx’}{d\theta}&#x3D;x’’$，$G\frac{M+m}{C^2}&#x3D;C’$<br>$$x’’+x&#x3D;C’$$<br>$$\frac{dx’}{dx}\frac{dx}{d\theta}+x&#x3D;C’$$<br>$$\frac{dx’}{dx}x’&#x3D;C’-x$$<br>$$\frac{x’^2}{2}&#x3D;C’x-\frac{x^2}{2}+C_1$$<br>$$x’^2+(x-C’)^2&#x3D;C’^2+2C_1&#x3D;C_2$$<br>$$\text{令}\begin{cases}x’&#x3D;\sqrt{C_2}cos\lambda\\x-C’&#x3D;\sqrt{C_2}sin\lambda\end{cases}$$<br>$$d\theta&#x3D;\frac{dx}{x’}&#x3D;\frac{\sqrt{C_2}cos\lambda d\lambda}{\sqrt{C_2}cos\lambda}&#x3D;d\lambda$$<br>两边积分<br>$$\lambda&#x3D;\theta+\varphi$$<br>$$\begin{aligned}<br>x &amp;&#x3D; C’+\sqrt{C_2}sin\lambda\\<br>  &amp;&#x3D; C’+\sqrt{C_2}sin(\theta+\varphi)\\<br>  &amp;&#x3D; C’-\sqrt{C_2}cos(\theta+\varphi+\frac\pi2)<br>\end{aligned}<br>$$<br>因此：<br>$$<br>\begin{aligned}<br>r&#x3D;\frac1x &amp;&#x3D; \frac{1}{C’-\sqrt{C_2}cos(\theta+\varphi+\frac\pi2)}\\<br>          &amp;&#x3D; \frac{\frac{1}{C’}}{1-\frac{\sqrt{C_2}}{C’}cos(\theta +\varphi +\frac\pi2)}<br>\end{aligned}<br>$$<br>满足圆锥曲线方程，只要初始条件合适，即可满足$e&#x3D;\frac{\sqrt{C_2}}{C’}\in [0,1)$<br>于是得证.</p><h1 id="第二定律"><a href="#第二定律" class="headerlink" title="第二定律"></a>第二定律</h1><p>有了开普勒第一定律的证明，第二定律的证明就变得十分简单<br>这里需要用到前面的$(7)$式<br>$$\dot{\theta}r^2&#x3D;C\tag7$$<br>因此掠面速度<br>$$V&#x3D;\frac{dS}{dt}&#x3D;\frac{\frac12 r(r+dr)sin(d\theta)}{dt}&#x3D;\frac{\frac12 r^2d\theta}{dt}&#x3D;\frac12 r^2\dot{\theta}&#x3D;\frac12 C\tag8$$<br>第二定律的证.</p><h1 id="第三定律"><a href="#第三定律" class="headerlink" title="第三定律"></a>第三定律</h1><p>在带到掠面速度$v$为定值后，周期$T&#x3D;\frac{S}{V}$<br>对于椭圆$\frac{x^2}{a^2}+\frac{y^2}{b^2}&#x3D;1$，其面积$S&#x3D;\pi ab$（这大概是常识就不证了吧）<br>然后我们只需要求出$V$关于半长轴$a$的表达式<br><img src="https://source.geniucker.top/image/20220116-1/3.png" alt="3"><br>取近日点和远日点，设距恒星距离分别为$r_1$和$r_2$，此时极角（极坐标方程里的$\theta$）为$\theta_1$和$\theta_2$，速度分别为$v_1$和$v_2$，取两个相等的$dt$。<br>则由$(8)$可得<br>$$V&#x3D;\frac12 r_1^2\dot{\theta_1}&#x3D;\frac12 r_1r_1\omega_1&#x3D;\frac12 r_1v_1$$<br>同理<br>$$V&#x3D;\frac12 r_2v_2&#x3D;\frac12 r_1v_1\tag9$$<br>由动能和引力势能守恒可得：<br>$$\frac12 mv_1^2-\frac{GMm}{r_1}&#x3D;\frac12 mv_2^2-\frac{GMm}{r_2}\tag{10}$$<br>由椭圆性质可得<br>$$<br>\begin{cases}<br>r_1&#x3D;a-c\\<br>r_2&#x3D;a+c\\<br>a^2-b^2&#x3D;c^2d<br>\end{cases}\tag{11}<br>$$<br>联立$(9)(10)(11)$，解得：<br>$$V&#x3D;\frac b2 \sqrt{\frac{GM}{a}}$$<br>因此周期<br>$$T&#x3D;\frac SV &#x3D;\frac{\pi ab}{\frac 2b \sqrt{\frac{GM}{a}}}&#x3D;2\pi a\sqrt{\frac{a}{GM}}$$<br>所以<br>$$\frac{a^3}{T^2}&#x3D;\frac{GM}{4\pi^2}&#x3D;k$$<br>得证.</p>]]></content>
    
    
    <categories>
      
      <category>笔记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>物理</tag>
      
      <tag>开普勒三大定律</tag>
      
      <tag>证明</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>用Chrome小恐龙dino制作Hexo的404页面</title>
    <link href="/2020/07/23/%E7%94%A8Chrome%E5%B0%8F%E6%81%90%E9%BE%99dino%E5%88%B6%E4%BD%9Chexo%E7%9A%84404%E9%A1%B5%E9%9D%A2/"/>
    <url>/2020/07/23/%E7%94%A8Chrome%E5%B0%8F%E6%81%90%E9%BE%99dino%E5%88%B6%E4%BD%9Chexo%E7%9A%84404%E9%A1%B5%E9%9D%A2/</url>
    
    <content type="html"><![CDATA[<blockquote><p>&amp;emsp;&amp;emsp;404页面是客户端在浏览网页时，服务器无法正常提供信息，或是服务器无法回应，且不知道原因所返回的页面。据说在第三次科技革命之前，互联网的形态就是一个大型的中央数据库，这个数据库就设置在404房间里面。那时候所有的请求都是由人工手动完成的，如果在数据库中没有找到请求者所需要的文件，或者由于请求者写错了文件编号，用户就会得到一个返回信息：room 404 : file not found。404错误信息通常是在目标页面被更改或移除，或客户端输入页面地址错误后显示的页面，人们也就习惯了用404作为服务器未找到文件的错误代码了。当然实际考证传说中的room 404是不存在的，在http请求3位的返回码中，4开头的代表客户错误，5开头代表服务器端错误。<p align="right">——百度百科</p></p></blockquote><p>对于使用GitHub Pages的用户，Github提供了 <a href="https://wolf2003rain.github.io/404.html">默认的404页面</a> 。当然，我们也可以自定义一个404页面。下面就教大家如何使用Chrome小恐龙制作404页面。</p><h1 id="预览"><a href="#预览" class="headerlink" title="预览"></a>预览</h1><p><a href="/404.html">我的404页面</a></p><h1 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h1><h2 id="建立-dino-html-文件"><a href="#建立-dino-html-文件" class="headerlink" title="建立 dino.html 文件"></a>建立 <code>dino.html</code> 文件</h2><p>在博客目录的<code>source\_data\</code>下建立 <code>dino.html</code> 文件，内容为：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;utf-8&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0,maximum-scale=1.0, user-scalable=no&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span> &gt;</span>404<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;https://geniucker.js.org/dino/dino.css&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;https://geniucker.js.org/dino/Open+Sans.css&quot;</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span>&gt;</span> <br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://geniucker.js.org/dino/dino.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;t&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;offline&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;messageBox&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;sendmessage&quot;</span>&gt;</span><br>         <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;niokbutton&quot;</span> <span class="hljs-attr">onclick</span>=<span class="hljs-string">&quot;okbuttonsend()&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;main-frame-error&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;interstitial-wrapper&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;main-content&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;icon icon-offline&quot;</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">&quot;&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;offline-resources&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;offline-resources-1x&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://geniucker.js.org/dino/assets/default_100_percent/100-offline-sprite.png&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;offline-resources-2x&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://geniucker.js.org/dino/assets/default_200_percent/200-offline-sprite.png&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">template</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;audio-resources&quot;</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">audio</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;offline-sound-press&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;data:audio/mpeg;base64,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&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">audio</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">audio</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;offline-sound-hit&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;data:audio/mpeg;base64,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&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">audio</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">audio</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;offline-sound-reached&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;data:audio/mpeg;base64,&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">audio</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">    <span class="hljs-variable language_">document</span>.<span class="hljs-property">onkeydown</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params">evt</span>) &#123;</span><br><span class="language-javascript">    evt = evt || <span class="hljs-variable language_">window</span>.<span class="hljs-property">event</span>;</span><br><span class="language-javascript">    <span class="hljs-keyword">if</span> (evt.<span class="hljs-property">keyCode</span> == <span class="hljs-number">32</span>) &#123;</span><br><span class="language-javascript">        <span class="hljs-keyword">var</span> box = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;messageBox&quot;</span>);</span><br><span class="language-javascript">        box.<span class="hljs-property">style</span>.<span class="hljs-property">visibility</span>=<span class="hljs-string">&quot;hidden&quot;</span>;</span><br><span class="language-javascript">    &#125;</span><br><span class="language-javascript">&#125;;</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="建立-404-html-文件"><a href="#建立-404-html-文件" class="headerlink" title="建立 404.html 文件"></a>建立 <code>404.html</code> 文件</h2><p>在博客目录的<code>source\_data\</code>下建立 <code>404.html</code> 文件，内容为：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs html">comments: false<br>toc:<br>  enable: false<br>---<br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;Content-Language&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;zh-CN&quot;</span>&gt;</span> <br>  <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">HTTP-EQUIV</span>=<span class="hljs-string">&quot;Content-Type&quot;</span> <span class="hljs-attr">CONTENT</span>=<span class="hljs-string">&quot;text/html; charset=gb2312&quot;</span>&gt;</span> <br>  <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>404<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span> <br>  <span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;alternate&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/atom.xml&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;&lt;你的博客名&gt;&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;application/atom+xml&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">h4</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;background: url(https://geniucker.js.org/404.png) center top no-repeat;padding-top: 80px;background-size: contain;&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">h4</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">center</span>&gt;</span>来玩Chrome小恐龙吧，点一下小恐龙你就可以正常开始啦~<span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span>P.S.空格或↑跳跃，↓下蹲<span class="hljs-tag">&lt;/<span class="hljs-name">center</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">h5</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">iframe</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;/dino.html&quot;</span> <span class="hljs-attr">seamless</span>=<span class="hljs-string">&quot;seamless&quot;</span> <span class="hljs-attr">scrolling</span>=<span class="hljs-string">&quot;no&quot;</span> <span class="hljs-attr">frameborder</span>=<span class="hljs-string">&quot;0&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;width: -webkit-fill-available;&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">iframe</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><style>img{margin-left: inherit;}</style><p>把其中的<code>&lt;你的博客名&gt;</code>（第10行）改为你的博客名称</p><h2 id="修改站点配置文件-config-yml"><a href="#修改站点配置文件-config-yml" class="headerlink" title="修改站点配置文件_config.yml"></a>修改站点配置文件<code>_config.yml</code></h2><p>找到站点配置文件<code>_config.yml</code>中的配置项<code>skip_render</code>，在原有的基础上加上<code>dino.html</code>，用<strong>英文</strong>逗号分隔，若值不止一个请使用中括号列表的形式，如图：<img src="https://geniucker.js.org/image/20200723-1/1.png"></p><h2 id="如果网页托管在Vercel，创建vercel-json"><a href="#如果网页托管在Vercel，创建vercel-json" class="headerlink" title="如果网页托管在Vercel，创建vercel.json"></a>如果网页托管在Vercel，创建<code>vercel.json</code></h2><p>如果网页托管在Vercel，创建<code>vercel.json</code>，内容如下：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;version&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">2</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;routes&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>    <span class="hljs-punctuation">&#123;</span> <span class="hljs-attr">&quot;handle&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;filesystem&quot;</span> <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-punctuation">&#123;</span> <span class="hljs-attr">&quot;src&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;/(.*)&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-attr">&quot;status&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">404</span><span class="hljs-punctuation">,</span> <span class="hljs-attr">&quot;dest&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;/404.html&quot;</span> <span class="hljs-punctuation">&#125;</span><br>  <span class="hljs-punctuation">]</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>Chrome小恐龙</tag>
      
      <tag>404页面</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hexo NexT主题自定义友链页面</title>
    <link href="/2020/04/25/Hexo-NexT%E4%B8%BB%E9%A2%98%E8%87%AA%E5%AE%9A%E4%B9%89%E5%8F%8B%E9%93%BE%E9%A1%B5%E9%9D%A2/"/>
    <url>/2020/04/25/Hexo-NexT%E4%B8%BB%E9%A2%98%E8%87%AA%E5%AE%9A%E4%B9%89%E5%8F%8B%E9%93%BE%E9%A1%B5%E9%9D%A2/</url>
    
    <content type="html"><![CDATA[<p>Next主题可增加友链，在主题配置文件<code>_config.yml</code>中<code>links</code>下添加，展示效果（图片来自<a href="https://links.jianshu.com/go?to=https://www.liaofuzhan.com">北宸的小站</a>）：<br><img src="https://source.geniucker.top/image/20200425-1-1.jpg"><br>当链接变多以后，页面的排版很不美观，这时候就需要给友链新增一个单独的页面了。网上其他的方法大部分都涉及到对模板的改动,会给日后的主题升级带来麻烦。本文的方法不涉及对模板的改动，但原理与网上的方法类似。<strong>本方法适用于NexT6.0.2及以上（由于涉及到styles.styl等Hexo数据目录的操作）</strong></p><h1 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h1><h2 id="新增links页面"><a href="#新增links页面" class="headerlink" title="新增links页面"></a>新增links页面</h2><p>在博客目录下的控制台执行：</p><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs haxe">hexo <span class="hljs-keyword">new</span> <span class="hljs-type">page</span> links<br></code></pre></td></tr></table></figure><p>在创建的<code>source\links\index.md</code>中添加如下内容（不删除原有内容，在最后添加）：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;links&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;links-content&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;link-navigation&quot;</span>&gt;</span><br>&#123;% for link in site.data.links %&#125;<br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;card&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;&#123;&#123; link.site &#125;&#125;&quot;</span> <span class="hljs-attr">target</span>=<span class="hljs-string">&quot;_blank&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;ava&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;&#123;&#123; link.avatar &#125;&#125;&quot;</span>/&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;card-header&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;&#123;&#123; link.site &#125;&#125;&quot;</span> <span class="hljs-attr">target</span>=<span class="hljs-string">&quot;_blank&quot;</span>&gt;</span>&#123;&#123; link.name &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;&#123;&#123; link.site &#125;&#125;&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;focus-links&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">i</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;fa fa-plus&quot;</span> <span class="hljs-attr">aria-hidden</span>=<span class="hljs-string">&quot;true&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">i</span>&gt;</span><span class="hljs-symbol">&amp;nbsp;</span>关注<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;info&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;&#123;&#123; link.info &#125;&#125;&quot;</span>&gt;</span>&#123;&#123; link.info &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>&#123;% endfor %&#125;<br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="修改-styles-styl-文件"><a href="#修改-styles-styl-文件" class="headerlink" title="修改 styles.styl 文件"></a>修改 styles.styl 文件</h2><p>用文本编辑器打开<code>source\_data\styles.styl</code>文件（无则创建），在末尾添加如下内容（不删除原有内容）：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-id">#links</span>&#123;<br><span class="hljs-attribute">margin-top</span>: <span class="hljs-number">5rem</span>;<br><span class="hljs-selector-class">.links-content</span>&#123;<br><span class="hljs-attribute">margin-top</span>:<span class="hljs-number">1rem</span>;<br>&#125;<br><span class="hljs-selector-class">.link-navigation</span><span class="hljs-selector-pseudo">::after</span> &#123;<br><span class="hljs-attribute">content</span>: <span class="hljs-string">&quot; &quot;</span>;<br><span class="hljs-attribute">display</span>: block;<br><span class="hljs-attribute">clear</span>: both;<br>&#125;<br><span class="hljs-selector-class">.card</span> &#123;<br><span class="hljs-attribute">width</span>: <span class="hljs-number">300px</span>;<br><span class="hljs-attribute">font-size</span>: <span class="hljs-number">1.1em</span>;<br><span class="hljs-attribute">padding</span>: <span class="hljs-number">10px</span> <span class="hljs-number">20px</span>;<br><span class="hljs-attribute">border-radius</span>: <span class="hljs-number">4px</span>;<br><span class="hljs-attribute">transition-duration</span>: <span class="hljs-number">0.15s</span>;<br><span class="hljs-attribute">margin-bottom</span>: <span class="hljs-number">1rem</span>;<br><span class="hljs-attribute">display</span>:flex;<br>&#125;<br><span class="hljs-selector-class">.card</span><span class="hljs-selector-pseudo">:nth-child</span>(odd) &#123;<br><span class="hljs-attribute">float</span>: left;<br>&#125;<br><span class="hljs-selector-class">.card</span><span class="hljs-selector-pseudo">:nth-child</span>(even) &#123;<br><span class="hljs-attribute">float</span>: right;<br>+mobile() &#123;<br><span class="hljs-attribute">float</span>: left;<br>&#125;<br>&#125;<br><span class="hljs-selector-class">.card</span><span class="hljs-selector-pseudo">:hover</span> &#123;<br><span class="hljs-attribute">transform</span>: <span class="hljs-built_in">scale</span>(<span class="hljs-number">1.1</span>);<br><span class="hljs-attribute">box-shadow</span>: <span class="hljs-number">0</span> <span class="hljs-number">2px</span> <span class="hljs-number">6px</span> <span class="hljs-number">0</span> <span class="hljs-built_in">rgba</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0.12</span>), <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">6px</span> <span class="hljs-number">0</span> <span class="hljs-built_in">rgba</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0.04</span>);<br><span class="hljs-attribute">background</span>: <span class="hljs-built_in">rgba</span>(<span class="hljs-number">68</span>, <span class="hljs-number">68</span>, <span class="hljs-number">68</span>, <span class="hljs-number">0.12</span>)<br>&#125;<br><span class="hljs-selector-class">.card</span> <span class="hljs-selector-tag">a</span> &#123;<br><span class="hljs-attribute">border</span>:none;<br>&#125;<br><span class="hljs-selector-class">.card</span> <span class="hljs-selector-class">.ava</span> &#123;<br><span class="hljs-attribute">width</span>: <span class="hljs-number">3rem</span><span class="hljs-meta">!important</span>;<br><span class="hljs-attribute">height</span>: <span class="hljs-number">3rem</span><span class="hljs-meta">!important</span>;<br><span class="hljs-attribute">margin</span>:<span class="hljs-number">0</span><span class="hljs-meta">!important</span>;<br><span class="hljs-attribute">margin-right</span>: <span class="hljs-number">1em</span><span class="hljs-meta">!important</span>;<br><span class="hljs-attribute">border-radius</span>:<span class="hljs-number">50%</span><br>transition: transform <span class="hljs-number">1s</span> ease-out;<br>&#125;<br><span class="hljs-selector-class">.ava</span><span class="hljs-selector-pseudo">:hover</span> &#123;<br><span class="hljs-attribute">transform</span>: <span class="hljs-built_in">rotateZ</span>(<span class="hljs-number">360deg</span>);<br>&#125;<br><span class="hljs-selector-class">.card</span> <span class="hljs-selector-class">.card-header</span> &#123;<br><span class="hljs-attribute">font-style</span>: italic;<br><span class="hljs-attribute">overflow</span>: hidden;<br><span class="hljs-attribute">width</span>: <span class="hljs-number">236px</span>;<br>&#125;<br><span class="hljs-selector-class">.card</span> <span class="hljs-selector-class">.card-header</span> <span class="hljs-selector-tag">a</span> &#123;<br><span class="hljs-attribute">font-style</span>: normal;<br><span class="hljs-attribute">color</span>: <span class="hljs-number">#2bbc8a</span>;<br><span class="hljs-attribute">font-weight</span>: bold;<br><span class="hljs-attribute">text-decoration</span>: none;<br>&#125;<br><span class="hljs-selector-class">.card</span> <span class="hljs-selector-class">.card-header</span> <span class="hljs-selector-tag">a</span><span class="hljs-selector-pseudo">:hover</span> &#123;<br><span class="hljs-attribute">color</span>: <span class="hljs-number">#d480aa</span>;<br><span class="hljs-attribute">text-decoration</span>: none;<br>&#125;<br><span class="hljs-selector-class">.card</span> <span class="hljs-selector-class">.card-header</span> <span class="hljs-selector-class">.info</span> &#123;<br><span class="hljs-attribute">font-style</span>:normal;<br><span class="hljs-attribute">color</span>:<span class="hljs-number">#a3a3a3</span>;<br><span class="hljs-attribute">font-size</span>:<span class="hljs-number">14px</span>;<br><span class="hljs-attribute">min-width</span>: <span class="hljs-number">0</span>;<br><span class="hljs-attribute">text-overflow</span>: ellipsis;<br><span class="hljs-attribute">overflow</span>: hidden;<br><span class="hljs-attribute">white-space</span>: nowrap;<br>&#125;<br><span class="hljs-selector-tag">span</span><span class="hljs-selector-class">.focus-links</span>&#123;<br><span class="hljs-attribute">vertical-align</span>:<span class="hljs-number">1px</span>;<br><span class="hljs-attribute">font-style</span>:normal;<br><span class="hljs-attribute">margin-left</span>:<span class="hljs-number">10px</span>;<br><span class="hljs-attribute">position</span>:unset;<br><span class="hljs-attribute">left</span>:<span class="hljs-number">0</span>;<br><span class="hljs-attribute">padding</span>:<span class="hljs-number">0</span> <span class="hljs-number">7px</span> <span class="hljs-number">0</span> <span class="hljs-number">5px</span>;<br><span class="hljs-attribute">font-size</span>:<span class="hljs-number">11px</span>;<br><span class="hljs-attribute">border-color</span>:<span class="hljs-number">#42c02e</span>;<br><span class="hljs-attribute">border-radius</span>:<span class="hljs-number">40px</span>;<br><span class="hljs-attribute">line-height</span>:<span class="hljs-number">24px</span>;<br><span class="hljs-attribute">height</span>:<span class="hljs-number">24px</span>;<br><span class="hljs-attribute">color</span>:<span class="hljs-number">#fff</span><span class="hljs-meta">!important</span>;<br><span class="hljs-attribute">background-color</span>:<span class="hljs-number">#2bbc8a</span>;<br><span class="hljs-attribute">display</span>:inline-block<br>&#125;<br><span class="hljs-selector-tag">span</span><span class="hljs-selector-class">.focus-links</span><span class="hljs-selector-pseudo">:hover</span>&#123;<span class="hljs-attribute">background-color</span>:<span class="hljs-number">#318024</span>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>在主题配置文件<code>_config.yml</code>的<code>custom_file_path</code>下取消<code>style: source/_data/styles.styl</code>的注释</p><h2 id="新建-links-yml-并配置友链"><a href="#新建-links-yml-并配置友链" class="headerlink" title="新建 links.yml 并配置友链"></a>新建 links.yml 并配置友链</h2><p>在<code>source\_data</code>下新建links.yml文件并用文本编辑器打开，添加如下内容：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Geniucker</span> <span class="hljs-comment">#友链名称</span><br>  <span class="hljs-attr">avatar:</span> <span class="hljs-string">https://source.geniucker.top/avatar.jpg</span> <span class="hljs-comment">#友链头像</span><br>  <span class="hljs-attr">site:</span> <span class="hljs-string">https://source.geniucker.top</span> <span class="hljs-comment">#友链地址</span><br>  <span class="hljs-attr">info:</span> <span class="hljs-string">崇尚技术</span> <span class="hljs-comment">#友链说明</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">cyc&#x27;s</span> <span class="hljs-string">blog</span><br>  <span class="hljs-attr">avatar:</span> <span class="hljs-string">https://q1.qlogo.cn/g?b=qq&amp;nk=2516803593&amp;s=640</span><br>  <span class="hljs-attr">site:</span> <span class="hljs-string">https://cyc2004.baklib.com</span><br>  <span class="hljs-attr">info:</span> <span class="hljs-string">暂无介绍~</span><br></code></pre></td></tr></table></figure><p>这里添加了两条友链，若添加多条方法类似</p><h2 id="配置-menu"><a href="#配置-menu" class="headerlink" title="配置 menu"></a>配置 menu</h2><p>在主题配置文件<code>_config.yml</code>中<code>menu</code>下添加：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">友情链接:</span> <span class="hljs-string">/links/</span> <span class="hljs-string">||</span> <span class="hljs-string">link</span><br></code></pre></td></tr></table></figure><p>NexT7.8.0以后为：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">友情链接:</span> <span class="hljs-string">/links/</span> <span class="hljs-string">||</span> <span class="hljs-string">fa</span> <span class="hljs-string">fa-link</span><br></code></pre></td></tr></table></figure><p>在主页的菜单即可看到友情链接</p><h1 id="效果演示"><a href="#效果演示" class="headerlink" title="效果演示"></a>效果演示</h1><p><img src="https://source.geniucker.top/image/20200425-1-2.jpg"><br><del>我的<a href="/links/">友情链接页面</a></del></p>]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>建站</tag>
      
      <tag>NexT主题</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>npm使用国内（淘宝）源</title>
    <link href="/2020/03/31/npm%E4%BD%BF%E7%94%A8%E5%9B%BD%E5%86%85%EF%BC%88%E6%B7%98%E5%AE%9D%EF%BC%89%E6%BA%90/"/>
    <url>/2020/03/31/npm%E4%BD%BF%E7%94%A8%E5%9B%BD%E5%86%85%EF%BC%88%E6%B7%98%E5%AE%9D%EF%BC%89%E6%BA%90/</url>
    
    <content type="html"><![CDATA[<hr><p>&amp;emsp;&amp;emsp;npm是随同NodeJS一起安装的包管理工具，能解决NodeJS代码部署上的很多问题。然而，npm默认是从国外源下载包的，这样国内用户使用速度就会很慢。但是，我们可以配置国内镜像（淘宝）来解决这个问题。这里只介绍一种方法（另一种方法是使用cnpm，但我在使用过程中发现了一些问题，所以不推荐）：</p><ol><li>在控制台执行：<figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs arduino">npm config set registry https:<span class="hljs-comment">//registry.npm.taobao.org</span><br></code></pre></td></tr></table></figure></li><li>验证命令：<figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">npm<span class="hljs-built_in"> config </span><span class="hljs-built_in">get</span> registry<br></code></pre></td></tr></table></figure>如果返回<code>https://registry.npm.taobao.org</code>，说明镜像配置成功。</li></ol>]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>实用技巧</tag>
      
      <tag>npm</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Chrome小技巧：让新标签页的搜索框变成真的</title>
    <link href="/2020/03/29/Chrome%E5%B0%8F%E6%8A%80%E5%B7%A7%EF%BC%9A%E8%AE%A9%E6%96%B0%E6%A0%87%E7%AD%BE%E9%A1%B5%E7%9A%84%E6%90%9C%E7%B4%A2%E6%A1%86%E5%8F%98%E6%88%90%E7%9C%9F%E7%9A%84/"/>
    <url>/2020/03/29/Chrome%E5%B0%8F%E6%8A%80%E5%B7%A7%EF%BC%9A%E8%AE%A9%E6%96%B0%E6%A0%87%E7%AD%BE%E9%A1%B5%E7%9A%84%E6%90%9C%E7%B4%A2%E6%A1%86%E5%8F%98%E6%88%90%E7%9C%9F%E7%9A%84/</url>
    
    <content type="html"><![CDATA[<hr><p>&amp;emsp;&amp;emsp;使用Chrome的用户都知道，Chrome的新标签页的搜索框是“假的”，当你定位到搜索框开始输入时光标会立即跳到地址栏。这样的设计似乎有点反人类（仅个人意见，觉得不对请轻喷），尤其对于刚开始使用Chrome的用户来说需要花一段时间才能适应。其实，在Chrome的flags里有选项让搜索框变成“真的”。下面给出步骤：</p><span id="more"></span><h4 id="步骤一："><a href="#步骤一：" class="headerlink" title="步骤一："></a>步骤一：</h4><p>在Chrome的地址栏内输入<code>chrome://flags</code>进入如下页面：<br><img src="https://source.geniucker.top/20200329-1-1.jpg" alt="pic1"></p><h4 id="步骤二："><a href="#步骤二：" class="headerlink" title="步骤二："></a>步骤二：</h4><p>在搜索框中输入关键词<code>real search box</code>，将得到如下结果：<br><img src="https://source.geniucker.top/20200329-1-2.jpg" alt="pic2"><br><code>Real search box in New Tab Page</code>：把新标签页的搜索框变成真的<br><code>Zero Suggestions in real search box on New Tab Page</code>：作用是单击新标签页中的搜索框能显示搜索记录<br><code>Make the New Tab page real search box match the omnibox&#39;s theme colors</code>：让新标签页的搜索框颜色和地址栏一样<br>把需要的功能右边的选择框中的<code>Default</code>改为<code>Enabled</code>并按照提示重启浏览器即可（重启可能导致其他标签页的数据丢失）。</p>]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Chrome</tag>
      
      <tag>实用技巧</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Python 八皇后问题</title>
    <link href="/2020/03/26/Python-%E5%85%AB%E7%9A%87%E5%90%8E%E9%97%AE%E9%A2%98/"/>
    <url>/2020/03/26/Python-%E5%85%AB%E7%9A%87%E5%90%8E%E9%97%AE%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<hr><blockquote><p>&amp;emsp;&amp;emsp;八皇后问题，是一个古老而著名的问题，是回溯算法的典型案例。该问题是国际西洋棋棋手马克斯·贝瑟尔于1848年提出：在8×8格的国际象棋上摆放八个皇后，使其不能互相攻击，即任意两个皇后都不能处于同一行、同一列或同一斜线上，问有多少种摆法。 高斯认为有76种方案。1854年在柏林的象棋杂志上不同的作者发表了40种不同的解，后来有人用图论的方法解出92种结果。计算机发明后，有多种计算机语言可以解决此问题。<p align="right">——百度百科</p></p></blockquote><p>这是上学期学Python的时候老师留给我们的一个思考题，一开始我和我一个同学是这么写的：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs python">k=<span class="hljs-number">0</span><br><span class="hljs-keyword">for</span> a <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>,<span class="hljs-number">9</span>):<br>    a==a<br>    <span class="hljs-keyword">for</span> b <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>,<span class="hljs-number">9</span>):<br>        <span class="hljs-keyword">if</span> b==a <span class="hljs-keyword">or</span> (<span class="hljs-built_in">abs</span>(b-a)==<span class="hljs-number">1</span>):<span class="hljs-keyword">continue</span><br>        <span class="hljs-keyword">else</span>:<br>            b==b<br>            <span class="hljs-keyword">for</span> c <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>,<span class="hljs-number">9</span>):<br>                <span class="hljs-keyword">if</span> c==b <span class="hljs-keyword">or</span> c==a <span class="hljs-keyword">or</span> (<span class="hljs-built_in">abs</span>(c-b)==<span class="hljs-number">1</span>) <span class="hljs-keyword">or</span> (<span class="hljs-built_in">abs</span>(c-a)==<span class="hljs-number">2</span>):<span class="hljs-keyword">continue</span><br>                <span class="hljs-keyword">else</span>:<br>                    c==c<br>                    <span class="hljs-keyword">for</span> d <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>,<span class="hljs-number">9</span>):<br>                        <span class="hljs-keyword">if</span> d==c <span class="hljs-keyword">or</span> d==b <span class="hljs-keyword">or</span> d==a <span class="hljs-keyword">or</span> (<span class="hljs-built_in">abs</span>(d-c)==<span class="hljs-number">1</span>) <span class="hljs-keyword">or</span> (<span class="hljs-built_in">abs</span>(d-b)==<span class="hljs-number">2</span>) <span class="hljs-keyword">or</span> (<span class="hljs-built_in">abs</span>(d-a)==<span class="hljs-number">3</span>):<span class="hljs-keyword">continue</span><br>                        <span class="hljs-keyword">else</span>:<br>                            d==d<br>                            <span class="hljs-keyword">for</span> e <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>,<span class="hljs-number">9</span>):<br>                                <span class="hljs-keyword">if</span> e==d <span class="hljs-keyword">or</span> e==c <span class="hljs-keyword">or</span> e==b <span class="hljs-keyword">or</span> e==a <span class="hljs-keyword">or</span> (<span class="hljs-built_in">abs</span>(e-d)==<span class="hljs-number">1</span>) <span class="hljs-keyword">or</span> (<span class="hljs-built_in">abs</span>(e-c)==<span class="hljs-number">2</span>) <span class="hljs-keyword">or</span> (<span class="hljs-built_in">abs</span>(e-b)==<span class="hljs-number">3</span>) <span class="hljs-keyword">or</span> (<span class="hljs-built_in">abs</span>(e-a)==<span class="hljs-number">4</span>):<span class="hljs-keyword">continue</span><br>                                <span class="hljs-keyword">else</span>:<br>                                    e==e<br>                                    <span class="hljs-keyword">for</span> f <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>,<span class="hljs-number">9</span>):<br>                                        <span class="hljs-keyword">if</span> f==e <span class="hljs-keyword">or</span> f==d <span class="hljs-keyword">or</span> f==c <span class="hljs-keyword">or</span> f==b <span class="hljs-keyword">or</span> f==a <span class="hljs-keyword">or</span> (<span class="hljs-built_in">abs</span>(f-e)==<span class="hljs-number">1</span>) <span class="hljs-keyword">or</span> (<span class="hljs-built_in">abs</span>(f-d)==<span class="hljs-number">2</span>) <span class="hljs-keyword">or</span> (<span class="hljs-built_in">abs</span>(f-c)==<span class="hljs-number">3</span>) <span class="hljs-keyword">or</span> (<span class="hljs-built_in">abs</span>(f-b)==<span class="hljs-number">4</span>) <span class="hljs-keyword">or</span> (<span class="hljs-built_in">abs</span>(f-a)==<span class="hljs-number">5</span>):<span class="hljs-keyword">continue</span><br>                                        <span class="hljs-keyword">else</span>:<br>                                            f==f<br>                                            <span class="hljs-keyword">for</span> g <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>,<span class="hljs-number">9</span>):<br>                                                <span class="hljs-keyword">if</span> g==f <span class="hljs-keyword">or</span> g==e <span class="hljs-keyword">or</span> g==d <span class="hljs-keyword">or</span> g==c <span class="hljs-keyword">or</span> g==b <span class="hljs-keyword">or</span> g==a <span class="hljs-keyword">or</span> (<span class="hljs-built_in">abs</span>(g-f)==<span class="hljs-number">1</span>) <span class="hljs-keyword">or</span> (<span class="hljs-built_in">abs</span>(g-e)==<span class="hljs-number">2</span>) <span class="hljs-keyword">or</span> (<span class="hljs-built_in">abs</span>( g-d)==<span class="hljs-number">3</span>) <span class="hljs-keyword">or</span> (<span class="hljs-built_in">abs</span>(g-c)==<span class="hljs-number">4</span>) <span class="hljs-keyword">or</span> (<span class="hljs-built_in">abs</span>(g-b)==<span class="hljs-number">5</span>) <span class="hljs-keyword">or</span> (<span class="hljs-built_in">abs</span>(g-a)==<span class="hljs-number">6</span>):<span class="hljs-keyword">continue</span><br>                                                <span class="hljs-keyword">else</span>:<br>                                                    g==g<br>                                                    <span class="hljs-keyword">for</span> h <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>,<span class="hljs-number">9</span>):<br>                                                        <span class="hljs-keyword">if</span> h==g <span class="hljs-keyword">or</span> h==f <span class="hljs-keyword">or</span> h==e <span class="hljs-keyword">or</span> h==d <span class="hljs-keyword">or</span> h==c <span class="hljs-keyword">or</span> h==b <span class="hljs-keyword">or</span> h==a <span class="hljs-keyword">or</span> (<span class="hljs-built_in">abs</span>(h-g)==<span class="hljs-number">1</span>) <span class="hljs-keyword">or</span> (<span class="hljs-built_in">abs</span>(h-f)==<span class="hljs-number">2</span>)  <span class="hljs-keyword">or</span> (<span class="hljs-built_in">abs</span>(h-e)==<span class="hljs-number">3</span>) <span class="hljs-keyword">or</span> (<span class="hljs-built_in">abs</span>(h-d)==<span class="hljs-number">4</span>) <span class="hljs-keyword">or</span> (<span class="hljs-built_in">abs</span>(h-c)==<span class="hljs-number">5</span>) <span class="hljs-keyword">or</span> (<span class="hljs-built_in">abs</span>(h-b)== <span class="hljs-number">6</span>) <span class="hljs-keyword">or</span> (<span class="hljs-built_in">abs</span>(h-a)==<span class="hljs-number">7</span>):<span class="hljs-keyword">continue</span><br>                                                        <span class="hljs-keyword">else</span>:<br>                                                            h==h<br>                                                            k+=<span class="hljs-number">1</span><br>                                                            <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;result&#x27;</span>,k,<span class="hljs-string">&#x27;:&#x27;</span>,<span class="hljs-string">&#x27;(1,&#x27;</span>,a,<span class="hljs-string">&#x27;),(2,&#x27;</span>,b,<span class="hljs-string">&#x27;),(3,&#x27;</span>,c,<span class="hljs-string">&#x27;),(4,&#x27;</span>,d,<span class="hljs-string">&#x27;),(5,&#x27;</span>,e,<span class="hljs-string">&#x27;),(6,&#x27;</span>,f,<span class="hljs-string">&#x27;),(7,&#x27;</span>,g,<span class="hljs-string">&#x27;),(8,&#x27;</span>,h,<span class="hljs-string">&#x27;)&#x27;</span>)<br><br></code></pre></td></tr></table></figure><p>这显然是我们初学者最容易想到的一种办法。由于“学业比较繁忙”，当时一直没有去思考更好的实现，直到现在才重新开始思考这个问题。从原程序看，循环嵌套了8次，由此我想到（网上看到的）让函数自己调用自己——递归。</p><p>整体思路：N皇后问题每行有且仅有一个皇后，用数组（Python只能列表）表示皇后的坐标（下标为行，至为列，为了方便第一行下标仍为0），在每一行都要用循环分别判断是否与前面任意一行在同一列或同一斜排，都满足条件进入下一行，直到行数&#x3D;N进行输出。下面给出代码（为了方便注释，有些可以合并的地方我分行写了）：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs python">num=<span class="hljs-number">0</span> <span class="hljs-comment">#用来计数</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">huangHou</span>(<span class="hljs-params">A,hang=<span class="hljs-number">0</span></span>):<span class="hljs-comment">#A是一个列表，hang表示第n行</span><br>    <span class="hljs-keyword">global</span> num<br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(A)==hang:<span class="hljs-comment">#递归终止条件</span><br>        num += <span class="hljs-number">1</span><br>        <span class="hljs-built_in">print</span>(num,end=<span class="hljs-string">&#x27;：&#x27;</span>)<br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(A)):<span class="hljs-comment">#坐标形式输出</span><br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;(&#x27;</span>+<span class="hljs-built_in">str</span>(i+<span class="hljs-number">1</span>)+<span class="hljs-string">&#x27;,&#x27;</span>+<span class="hljs-built_in">str</span>(A[i])+<span class="hljs-string">&#x27;)&#x27;</span>,end=<span class="hljs-string">&#x27;&#x27;</span>)<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;&#x27;</span>)<br>        <span class="hljs-keyword">return</span><br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(A)):<span class="hljs-comment">#遍历第hang行的每一个位置</span><br>            tem = <span class="hljs-literal">True</span><span class="hljs-comment">#用于标记是否满足条件</span><br>            A[hang] = i<span class="hljs-comment">#填入列表</span><br>            <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(hang):<span class="hljs-comment">#判断两个条件</span><br>                <span class="hljs-keyword">if</span> (A[j]==A[hang])<span class="hljs-keyword">or</span>(<span class="hljs-built_in">abs</span>(A[j]-A[hang])==hang-j):<br>                    tem = <span class="hljs-literal">False</span><br>                    <span class="hljs-keyword">break</span><br>            <span class="hljs-keyword">if</span> tem:huangHou(A,hang+<span class="hljs-number">1</span>)<span class="hljs-comment">#若满足条件，进入下一行</span><br>huangHou([<span class="hljs-literal">None</span>]*<span class="hljs-number">8</span>)<span class="hljs-comment">#只要填入有N个元素的列表即可解决N皇后问题</span><br><br></code></pre></td></tr></table></figure><p>这样不但结构清晰还简短了许多。<br>本人小白一只，若有错误欢迎在评论区留言指正（最好留下邮箱方便联系）</p>]]></content>
    
    
    <categories>
      
      <category>笔记</category>
      
      <category>算法</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python</tag>
      
      <tag>算法</tag>
      
      <tag>八皇后问题</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Python pip 使用国内源</title>
    <link href="/2020/03/25/Python-pip-%E4%BD%BF%E7%94%A8%E5%9B%BD%E5%86%85%E6%BA%90/"/>
    <url>/2020/03/25/Python-pip-%E4%BD%BF%E7%94%A8%E5%9B%BD%E5%86%85%E6%BA%90/</url>
    
    <content type="html"><![CDATA[<hr><p>&amp;emsp;&amp;emsp;众所周知，Python使用pip安装第三方包时，会从 <a href="https://pypi.org/">https://pypi.org/</a> 资源库中下载，然而在国内，会面临下载速度慢，甚至无法下载的尴尬。这时，配置一个国内源就很重要。下面介绍方法：  </p><h2 id="方法一：临时使用国内镜像安装"><a href="#方法一：临时使用国内镜像安装" class="headerlink" title="方法一：临时使用国内镜像安装"></a>方法一：临时使用国内镜像安装</h2><p>安装时加上参数<code>-i &lt;国内镜像地址&gt;</code>（文末会给出几个国内镜像地址），例如：</p><pre><code class="hljs">pip install -i https://pypi.tuna.tsinghua.edu.cn/simple some-package</code></pre><h2 id="方式二：永久使用国内pypi镜像安装"><a href="#方式二：永久使用国内pypi镜像安装" class="headerlink" title="方式二：永久使用国内pypi镜像安装"></a>方式二：永久使用国内pypi镜像安装</h2><ol><li>升级 pip 到最新的版本 (&gt;&#x3D;10.0.0) 后进行配置：<figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">pip <span class="hljs-keyword">install</span> pip -U<br></code></pre></td></tr></table></figure>若使用默认源较慢可临时使用国内镜像<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xml">pip install -i <span class="hljs-tag">&lt;<span class="hljs-name">国内镜像地址</span>&gt;</span> pip -U<br></code></pre></td></tr></table></figure></li><li>进行配置：<figure class="highlight pf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pf">pip config <span class="hljs-built_in">set</span> <span class="hljs-keyword">global</span>.index-url <span class="hljs-variable">&lt;国内镜像地址&gt;</span><br></code></pre></td></tr></table></figure></li></ol><h2 id="推荐几个国内镜像"><a href="#推荐几个国内镜像" class="headerlink" title="推荐几个国内镜像"></a>推荐几个国内镜像</h2><pre><code class="hljs">清华大学：https://pypi.tuna.tsinghua.edu.cn/simple/阿里云：https://mirrors.aliyun.com/pypi/simple/豆瓣：https://pypi.douban.com/simple/</code></pre>]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>实用技巧</tag>
      
      <tag>Python</tag>
      
      <tag>pip</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>更新，嗯~</title>
    <link href="/2020/02/27/%E6%9B%B4%E6%96%B0%EF%BC%8C%E5%97%AF/"/>
    <url>/2020/02/27/%E6%9B%B4%E6%96%B0%EF%BC%8C%E5%97%AF/</url>
    
    <content type="html"><![CDATA[<hr><p>今天增加了评论系统（Valine）以及留言（还是Valine）<br>&#x2F;手动滑稽<img src="https://source.geniucker.top/20200227-1-1.png">就是一直搞不懂图片和文字为什么不能在同一行显示  </p><p>本段代码（Markdown）：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs Markdown">---<br>今天增加了评论系统（Valine）以及留言（还是Valine）  <br>/手动滑稽![](<span class="hljs-link">https://source.geniucker.top/20200227-1-1.webp</span>)就是一直搞不懂图片和文字为什么不能在同一行显示<br></code></pre></td></tr></table></figure><p><strong>欢迎指导</strong></p>]]></content>
    
    
    <categories>
      
      <category>随笔</category>
      
    </categories>
    
    
    <tags>
      
      <tag>建站</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>终于搭好博客了</title>
    <link href="/2020/02/26/%E7%BB%88%E4%BA%8E%E6%90%AD%E5%A5%BD%E5%8D%9A%E5%AE%A2%E4%BA%86/"/>
    <url>/2020/02/26/%E7%BB%88%E4%BA%8E%E6%90%AD%E5%A5%BD%E5%8D%9A%E5%AE%A2%E4%BA%86/</url>
    
    <content type="html"><![CDATA[<hr><p>小白一枚，由于什么都不会，所以搞了好几天才搞好hexo和next主题，终于弄好了！</p>]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>建站</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
